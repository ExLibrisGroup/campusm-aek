var utils = require("../utils");
var EventEmitter = require("../event-emitter");
var clientTools = require("../client-tools");

var defaults = {
  timeout:500
}

module.exports = {
  get:function(opts={}) {
    opts = utils.extend({},defaults,opts)    

    return new Promise(function(resolve,reject) {

      var events = new EventEmitter();

      events.on("success",function(address) {
        resolve(address);
      });

      events.on("error",function(message,details) {
        var error = utils.normaliseError(message);
        if(details) {
          error.details = details;
        }
        reject(error);
      });

      events.on("success error",function() {
        clearTimeout(timeout);
        events.off()
      });

      var timeout = setTimeout(function() {
        events.emit("error",`Client failed to respond within the given timeout (${opts.timeout}ms)`)
      },opts.timeout);

      return clientTools.invoke("storedAddress",{cb:events.emit.bind(events)});

    });
  }
}