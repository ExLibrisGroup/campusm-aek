var React = require("react");
var mergeProps = require("../utils/merge-props");
var getChildren = require("../utils/children");
var _ = require("../../utils");
var pickHtmlProps = require("../utils/pick-html-props");

var Header = React.createClass({

  getDefaultProps:function() {
    return {
      level:1
    };
  },

  render:function() {
    var className = "ui header";
    var classSet = {};
    var props = this.props;
    var level = _.contains(["1","2","3","4","5"],props.level+"") && props.level+"" || "1";
    var content = getChildren(this);

    if(content.length === 0) {
      content.push(props.text || "-");
    }
    if(content.length === 1 && _.isString(content[0])) {
      content[0] = <span key="text">{content[0]}</span>;
    }

    if(props.subtext) {
      content.push(<div key="subhead" className="sub header">{props.subtext}</div>);
    }

    if(props.image || props.icon || props.subtext) {
      content = [<div key="content" className="content">{content}</div>];
      if(props.image || props.icon) {
        let img;
        if(props.image) {
          img = <img key="img" src={props.image}/>;
        }
        else {
          img = <i key="icon" className={props.icon + " icon"}/>;
        }

        if(props.textAlign === "right") {
          content.push(img);
        }
        else if(props.iconAlign === "right"){
          content.push(img);
        }
        else {
          content.unshift(img);
        }
      }
    }

    for(let prop of ["dividing","block","inverted"]) {
      if(props[prop]) {
        classSet[prop] = true;
      }
    }

    if(props.textAlign) {
      className = `ui ${props.textAlign} aligned header`;
    }

    if(props.theme) {
      classSet[props.theme] = true;
    }


    props = pickHtmlProps(mergeProps({className},{classSet},props));

    return React.createElement("h"+level,props,content);

  }

});

var BannerHeader = React.createClass({

  render:function() {

    var props = mergeProps({className:"banner"},this.props);

    return <Header {...props}/>;

  }

});


Header.BannerHeader = BannerHeader;
Header.Header = Header;

module.exports = Header;
