

var utils = require("../../utils"),
    React = require("react"),
    Icon = require("./icon"),
    numberText = require("../../lib/number-text");

var IconSelect = React.createClass({
  render: function() {
    var props = this.props,
        value = this.props.value,
        field = this;
    
    var options = this.props.options.map(function(option) {
      
      var activeIcon;

      if(utils.isString(option) || utils.isNumber(option)) {
        option = {value:option,label:option};
      }

      var className = "column";
      if(option.value == value) {
        className += " active"
        activeIcon = (
          <div className="active-icon">
            <Icon path="m717 440q0 16-11 26l-50 50q-11 11-25 11t-26-11l-227-227-126 126q-11 11-25 11t-26-11l-50-50q-10-10-10-26 0-15 10-25l202-202q10-10 25-10 15 0 25 10l303 303q11 10 11 25z m140-90q0-117-57-215t-156-156-215-58-216 58-155 156-58 215 58 215 155 156 216 58 215-58 156-156 57-215z"/>
          </div>
        )
      }

      if(option.className) {
        className += " "+option.className;
      }

      return (
        <button className={className} onClick={field.onClick.bind(field,option)}>
          <div className="icon">
            <Icon path={option.iconPath}/>
            {activeIcon}
          </div>
          <div className="label">{option.label}</div>
        </button>
      )
    });
    

    var colCount = numberText(options.length)

    var className = "ui "+colCount+" column grid aek-icon-select";
    if(props.className) {
      className += " "+props.className
    }

    return (
      <div className={className}>
        {options}
        {this.props.requiredMarker}
      </div>
    );


  },
  
  onClick:function(option,e) {
    e.preventDefault();
    if(this.props.onChange) {
      this.props.onChange(e,this.props.name,option.value)
    }
  }
})

IconSelect.excludeRequiredMarker = true;

module.exports = IconSelect