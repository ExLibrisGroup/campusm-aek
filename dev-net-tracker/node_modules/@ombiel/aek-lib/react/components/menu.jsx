
var React = require("react");
var utils = require("../../utils");
var _ = utils;
var mergeProps = require("../utils/merge-props");


var MenuItem = React.createClass({

  render:function() {

    var props = {"className":"item"};
    var component = this.props.component || ((this.props.href || this.props.onClick) && "a") || "div";

    if(this.props.onClick) {
      props.href = this.props.href || "#";
    }

    props = mergeProps(props,_.omit(this.props,"component","children","leftIcon","rightIcon"));

    var children = this.props.children;
    if(!children) {
      var leftIcon = this.props.leftIcon && <i className={this.props.leftIcon+" icon"}></i>;
      var rightIcon = this.props.rightIcon || (component==="a" && "angle right");
      rightIcon = rightIcon && <i className={rightIcon+" icon"}></i>;
      children = [leftIcon,this.props.label,rightIcon];
    }

    return React.createElement(component,props,children);

  }

});


var defaultItemFactory = function(item) {
  
  var label = item.label || item.title || item.text;
  var href = item.link || item.href;
  var key = item.id || item.key;

  var onClick = item.onClick;

  return <MenuItem {...{href,onClick,label,key}}/>;

};

var Menu = React.createClass({


  render:function() {

    var children = this.props.children;

    if(this.props.items) {
      var itemFactory = this.props.itemFactory || defaultItemFactory;
      children = this.props.items.map(itemFactory);
    }

    var props = {"className":"ui vertical menu"};
    var component = props.component || "div";

    props = mergeProps(props,_.omit(this.props,"items","itemFactory","children","component"));

    return React.createElement(component,props,children);

  }


});

Menu.Item = MenuItem;

module.exports = Menu;
