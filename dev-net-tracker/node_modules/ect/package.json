{
  "_args": [
    [
      {
        "raw": "ect@^0.5.9",
        "scope": null,
        "escapedName": "ect",
        "name": "ect",
        "rawSpec": "^0.5.9",
        "spec": ">=0.5.9 <0.6.0",
        "type": "range"
      },
      "C:\\Users\\paytonp\\dev-net-tracker\\node_modules\\@ombiel\\aek-buildtools"
    ]
  ],
  "_from": "ect@>=0.5.9 <0.6.0",
  "_id": "ect@0.5.9",
  "_inCache": true,
  "_location": "/ect",
  "_npmUser": {
    "name": "baryshev",
    "email": "vadimbaryshev@gmail.com"
  },
  "_npmVersion": "1.4.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ect@^0.5.9",
    "scope": null,
    "escapedName": "ect",
    "name": "ect",
    "rawSpec": "^0.5.9",
    "spec": ">=0.5.9 <0.6.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@ombiel/aek-buildtools"
  ],
  "_resolved": "https://registry.npmjs.org/ect/-/ect-0.5.9.tgz",
  "_shasum": "7b04ec182ebb7fb3913b629e16900db33e0f4de0",
  "_shrinkwrap": null,
  "_spec": "ect@^0.5.9",
  "_where": "C:\\Users\\paytonp\\dev-net-tracker\\node_modules\\@ombiel\\aek-buildtools",
  "author": {
    "name": "Vadim M. Baryshev",
    "email": "vadimbaryshev@gmail.com"
  },
  "bin": {
    "ect": "./bin/ect"
  },
  "bugs": {
    "url": "https://github.com/baryshev/ect/issues"
  },
  "dependencies": {
    "coffee-script": ">= 1.5.0",
    "optimist": "0.4.0"
  },
  "description": "CoffeeScript template engine",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "7b04ec182ebb7fb3913b629e16900db33e0f4de0",
    "tarball": "https://registry.npmjs.org/ect/-/ect-0.5.9.tgz"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "homepage": "http://ectjs.com",
  "keywords": [
    "template",
    "coffeescript"
  ],
  "main": "./index",
  "maintainers": [
    {
      "name": "baryshev",
      "email": "vadimbaryshev@gmail.com"
    }
  ],
  "name": "ect",
  "optionalDependencies": {},
  "readme": "# ECT\n\n[Performance focused](http://ectjs.com/#benchmark) JavaScript template engine with embedded CoffeeScript syntax.\n\n[Just try demo](http://ectjs.com) to check all features.\n\n## Installation\n\n\tnpm install ect\n\n## Features\n\n  * Excellent performance\n  * Templates caching\n  * Automatic reloading of changed templates\n  * CoffeeScript code in templates\n  * Multi-line expressions support\n  * Tag customization support\n  * Node.JS and client-side support\n  * Powerful but simple syntax\n  * Inheritance, partials, blocks\n  * Compatible with `express`\n  * Compatible with `RequireJS`\n  * Backward compatible with `eco`\n  * [Syntax highlighting for Sublime Text 2](https://github.com/TurtlePie/Sublime-ECT) by [TurtlePie](https://github.com/TurtlePie)\n\n## Usage\n\n```js\nvar ECT = require('ect');\n\nvar renderer = ECT({ root : __dirname + '/views', ext : '.ect' });\nvar html = renderer.render('page', { title: 'Hello, World!' });\n```\n\nor\n\n```js\nvar ECT = require('ect');\n\nvar renderer = ECT({ root : __dirname + '/views', ext : '.ect' });\n\nrenderer.render('page', { title: 'Hello, World!' }, function (error, html) {\n\tconsole.log(error);\n\tconsole.log(html);\n});\n```\n\nYou may use JavaScript object as root.\n\n```js\nvar ECT = require('ect');\n\nvar renderer = ECT({ root : {\n\t\t\t\tlayout: '<html><head><title><%- title %></title></head><body><% content %></body></html>',\n\t\t\t\tpage: '<% extend \"layout\" %><p>Page content</p>'\n\t\t\t\t}\n\t\t\t});\n\nvar html = renderer.render('page', { title: 'Hello, World!' });\n```\n\n### With express\n\napp.js\n```js\nvar express = require('express');\nvar app = express();\nvar ECT = require('ect');\nvar ectRenderer = ECT({ watch: true, root: __dirname + '/views' });\n\napp.engine('.ect', ectRenderer.render);\n\napp.get('/', function (req, res){\n\tres.render('index.ect');\n});\n\napp.listen(3000);\nconsole.log('Listening on port 3000');\n```\n\nviews/index.ect\n```html\n<% extend 'layout.ect' %>\n<div>Hello, World!</div>\n```\n\nviews/layout.ect\n```html\n<html>\n\t<body>\n\t\t<% content %>\n\t</body>\n</html>\n```\n\n## Syntax\n\n### Unescaped output\n\n```\n<%- someVar %>\n```\n\n### Escaped output\n\n```\n<%= someVar %>\n```\n\n### CoffeeScript code\n\n```\n<% for article in @articles : %>\n\t<% include 'article', article %>\n<% end %>\n```\n\nor\n\n```\n<% if @user?.authenticated : %>\n\t<% include 'partials/user' %>\n<% else : %>\n\t<% include 'partials/auth' %>\n<% end %>\n```\n\n### Inheritance\n\n```\n<% extend 'layout' %>\n```\n\nUse\n\n\n```\n<% content %>\n```\n\nin parent template to define the insertion point.\n\n### Partials\n\n```\n<% include 'partial' %>\n```\n\nYou can redefine data context of partial\n\n```\n<% include 'partial', { customVar: 'Hello, World!' } %>\n```\n\n### Blocks\n\n```\n<% block 'blockName' : %>\n\t<p>This is block content</p>\n<% end %>\n```\n\nUse\n\n\n```\n<% content 'blockName' %>\n```\n\nin parent template to define the insertion point.\n\nBlocks supports more than one level of inheritance and may be redefined.\n\n## Options\n\n### Renderer\n\n  - `root` — Templates root folder or JavaScript object containing templates\n  - `ext` — Extension of templates, defaulting to `''` (not used for JavaScript objects as root)\n  - `cache` — Compiled functions are cached, defaulting to `true`\n  - `watch` — Automatic reloading of changed templates, defaulting to `false` (useful for debugging with enabled cache, not supported for client-side)\n  - `open` — Open tag, defaulting to `<%`\n  - `close` — Closing tag, defaulting to `%>`\n\n### Compiler middleware\n\n  - `root` — Base url, defaulting to `/` (should be equal to `root` option on the client side)\n  - `gzip` — Compressing templates with gzip, defaulting to `false`\n\n## Client-side support\n\nDownload and include [coffee-script.js](https://github.com/jashkenas/coffee-script/blob/master/extras/coffee-script.js) and [ect.min.js](https://github.com/baryshev/ect/tree/master/ect.min.js).\n\n```html\n<script src=\"/path/coffee-script.js\"></script>\n<script src=\"/path/ect.min.js\"></script>\n```\n\nUse it.\n\n```js\nvar renderer = ECT({ root : '/views' });\nvar data = { title : 'Hello, World!' };\nvar html = renderer.render('template.ect', data);\n```\n\n### With server side compiler middleware\n\nDownload and include [ect.min.js](https://github.com/baryshev/ect/tree/master/ect.min.js). You don't need to include CoffeeScript compiler, because templates are served already compiled by server side compiler middleware.\n\n```html\n<script src=\"/path/ect.min.js\"></script>\n```\n\nSetup server side compiler middleware.\n\n```js\nvar connect = require('connect');\nvar ECT = require('ect');\n\nvar renderer = ECT({ root : __dirname + '/views', ext : '.ect' });\n\nvar app = connect()\n\t.use(renderer.compiler({ root: '/views', gzip: true }))\n\t.use(function(err, req, res, next) {\n\t\tres.end(err.message);\n\t});\n\napp.listen(3000);\n```\n\nUse it.\n\n```js\nvar renderer = ECT({ root : '/views', ext : '.ect' });\nvar data = { title : 'Hello, World!' };\nvar html = renderer.render('template', data);\n```\n\nNote: root folder must be on the same domain to avoid cross-domain restrictions.\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 Vadim M. Baryshev &lt;vadimbaryshev@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/baryshev/ect.git"
  },
  "version": "0.5.9"
}
