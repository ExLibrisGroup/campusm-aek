{
  "_args": [
    [
      {
        "raw": "regenerator@0.8.40",
        "scope": null,
        "escapedName": "regenerator",
        "name": "regenerator",
        "rawSpec": "0.8.40",
        "spec": "0.8.40",
        "type": "version"
      },
      "C:\\Users\\paytonp\\dev-net-tracker\\node_modules\\babel-core"
    ]
  ],
  "_from": "regenerator@0.8.40",
  "_id": "regenerator@0.8.40",
  "_inCache": true,
  "_location": "/regenerator",
  "_npmUser": {
    "name": "benjamn",
    "email": "bn@cs.stanford.edu"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requested": {
    "raw": "regenerator@0.8.40",
    "scope": null,
    "escapedName": "regenerator",
    "name": "regenerator",
    "rawSpec": "0.8.40",
    "spec": "0.8.40",
    "type": "version"
  },
  "_requiredBy": [
    "/babel-core"
  ],
  "_resolved": "https://registry.npmjs.org/regenerator/-/regenerator-0.8.40.tgz",
  "_shasum": "a0e457c58ebdbae575c9f8cd75127e93756435d8",
  "_shrinkwrap": null,
  "_spec": "regenerator@0.8.40",
  "_where": "C:\\Users\\paytonp\\dev-net-tracker\\node_modules\\babel-core",
  "author": {
    "name": "Ben Newman",
    "email": "bn@cs.stanford.edu"
  },
  "bin": {
    "regenerator": "bin/regenerator"
  },
  "bugs": {
    "url": "https://github.com/facebook/regenerator/issues"
  },
  "dependencies": {
    "commoner": "~0.10.3",
    "defs": "~1.1.0",
    "esprima-fb": "~15001.1001.0-dev-harmony-fb",
    "private": "~0.1.5",
    "recast": "0.10.33",
    "through": "~2.3.8"
  },
  "description": "Source transformer enabling ECMAScript 6 generator functions (yield) in JavaScript-of-today (ES5)",
  "devDependencies": {
    "mocha": "~2.3.3",
    "promise": "~7.0.4",
    "semver": "~5.0.3"
  },
  "directories": {},
  "dist": {
    "shasum": "a0e457c58ebdbae575c9f8cd75127e93756435d8",
    "tarball": "https://registry.npmjs.org/regenerator/-/regenerator-0.8.40.tgz"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "gitHead": "093fca3e1b15bf7e52c0864b1402741e8d6807c2",
  "homepage": "http://github.com/facebook/regenerator",
  "keywords": [
    "generator",
    "yield",
    "coroutine",
    "rewriting",
    "transformation",
    "syntax",
    "codegen",
    "rewriting",
    "refactoring",
    "transpiler",
    "desugaring",
    "ES6"
  ],
  "license": "BSD",
  "main": "main.js",
  "maintainers": [
    {
      "name": "benjamn",
      "email": "bn@cs.stanford.edu"
    }
  ],
  "name": "regenerator",
  "optionalDependencies": {},
  "readme": "regenerator [![Build Status](https://travis-ci.org/facebook/regenerator.png?branch=master)](https://travis-ci.org/facebook/regenerator)\n===\n\nThis package implements a fully-functional source transformation that\ntakes the proposed syntax for generators/`yield` from future versions of\nJS ([ECMAScript6 or ES6](http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts), experimentally implemented in Node.js v0.11) and\nspits out efficient JS-of-today (ES5) that behaves the same way.\n\nA small runtime library (less than 1KB compressed) is required to provide the\n`wrapGenerator` function. You can install it either as a CommonJS module\nor as a standalone .js file, whichever you prefer.\n\nInstallation\n---\n\nFrom NPM:\n```sh\nnpm install -g regenerator\n```\n\nFrom GitHub:\n```sh\ncd path/to/node_modules\ngit clone git://github.com/facebook/regenerator.git\ncd regenerator\nnpm install .\nnpm test\n```\n\nUsage\n---\n\nYou have several options for using this module.\n\nSimplest usage:\n```sh\nregenerator es6.js > es5.js # Just the transform.\nregenerator --include-runtime es6.js > es5.js # Add the runtime too.\nregenerator src lib # Transform every .js file in src and output to lib.\n```\n\nProgrammatic usage:\n```js\nvar es5Source = require(\"regenerator\").compile(es6Source).code;\nvar es5SourceWithRuntime = require(\"regenerator\").compile(es6Source, {\n  includeRuntime: true\n}).code;\n```\n\nAST transformation:\n```js\nvar recast = require(\"recast\");\nvar ast = recast.parse(es6Source);\nast = require(\"regenerator\").transform(ast);\nvar es5Source = recast.print(ast);\n```\n\nHow can you get involved?\n---\n\nThe easiest way to get involved is to look for buggy examples using [the\nsandbox](http://facebook.github.io/regenerator/), and when you find\nsomething strange just click the \"report a bug\" link (the new issue form\nwill be populated automatically with the problematic code).\n\nAlternatively, you can\n[fork](https://github.com/facebook/regenerator/fork) the repository,\ncreate some failing tests cases in [test/tests.es6.js](test/tests.es6.js),\nand send pull requests for me to fix.\n\nIf you're feeling especially brave, you are more than welcome to dive into\nthe transformer code and fix the bug(s) yourself, but I must warn you that\nthe code could really benefit from [better implementation\ncomments](https://github.com/facebook/regenerator/issues/7).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/facebook/regenerator.git"
  },
  "scripts": {
    "test": "node test/run.js"
  },
  "version": "0.8.40"
}
