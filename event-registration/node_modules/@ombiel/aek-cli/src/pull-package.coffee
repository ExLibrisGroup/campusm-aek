auth = require("./auth")
npm = require("./npm")
request = require("request")
tar = require("tar-fs")
Promise = require("rsvp").Promise

module.exports = (options)->
  auth.getUserDetails(options)
    .then (userDetails)->
      return new Promise (resolve,reject)->
        packageName = options.package
        npm.view(packageName).then((data)->

          if !data
            reject("Can't obtain package info")
          if !data.dist?.tarball
            reject("Package tarball not available")
          
          requestOptions =
            url:data.dist.tarball,
            headers:
              "aek-username":userDetails.username
              "aek-token":userDetails.token

          destination = options.destination

          extractor = tar.extract(destination,{
            map: (header)->
              header.name = header.name.replace(/^package[\/\\]/,"")
              return header
          })
          .on('error', reject)
          .on('finish',resolve)

          request(requestOptions)
            .on("error",reject)
            .pipe(require('zlib').createGunzip())
            .pipe(extractor)
        
        ).catch(reject)
