var _ = require("../utils");
var EventEmitter = require("../event-emitter");

var defaults = {
  maximumAge:30000
};

var geolocation;
try {
  geolocation = window.navigator.geolocation;
}
catch(e) {} //eslint-disable-line no-empty

class Geolocation extends EventEmitter {
  constructor(params = {}) {
    super();
    _.defer(()=>{
      if(!geolocation) {
        this.trigger("error",Error("NOGEOLOCATION"));
        this.stop();
      }

      // Android doesn't call error callback if user has disabled location services
      // so we default a timeout to avoid long wait
      var presets = _.getPlatform() === "android" ? {timeout:5000} : {};

      params = _.extend(presets,defaults,params);

      var {watch,...opts} = params;
      var method = watch ? "watchPosition" : "getCurrentPosition";

      var success = (position)=>{
        this.trigger("update",position);
        if(!watch) { this.stop(); }
      };

      var error = (err)=>{
        this.trigger("error",err);
        if(!watch) { this.stop(); }
      };

      try{
        this.watchID = geolocation[method](success,error,opts);
      }
      catch(err) {
        this.trigger("error",err);
        stop();
      }
    });
  }

  stop() {
    if(this.watchID) {
      geolocation.clearWatch(this.watchID);
    }
    this.off();
  }
}

module.exports = Geolocation;
