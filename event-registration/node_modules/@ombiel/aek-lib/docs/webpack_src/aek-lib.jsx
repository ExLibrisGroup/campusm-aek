var babel = require("babel-core/browser");
var React = window.React = require("react");
var ReactDOM = window.ReactDOM = require("react-dom");
require("../../utils/fastclick");

var bundled = {
  "@ombiel/aek-lib/react/components/segment":require("@ombiel/aek-lib/react/components/segment"),
  "@ombiel/aek-lib/react/components/message":require("@ombiel/aek-lib/react/components/message"),
  "@ombiel/aek-lib/react/components/button":require("@ombiel/aek-lib/react/components/button"),
  "@ombiel/aek-lib/react/components/listview":require("@ombiel/aek-lib/react/components/listview"),
  "@ombiel/aek-lib/react/components/grid":require("@ombiel/aek-lib/react/components/grid"),
  "@ombiel/aek-lib/react/components/field":require("@ombiel/aek-lib/react/components/field"),
  "@ombiel/aek-lib/react/components/checkbox":require("@ombiel/aek-lib/react/components/checkbox"),
  "@ombiel/aek-lib/react/components/panel":require("@ombiel/aek-lib/react/components/panel"),
  "@ombiel/aek-lib/react/components/header":require("@ombiel/aek-lib/react/components/header"),
  "@ombiel/aek-lib/react/components/group":require("@ombiel/aek-lib/react/components/group"),
  "@ombiel/aek-lib/react/components/button-group":require("@ombiel/aek-lib/react/components/button-group"),
  "@ombiel/aek-lib/react/components/layout":require("@ombiel/aek-lib/react/components/layout"),
  "@ombiel/aek-lib/react/components/form":require("@ombiel/aek-lib/react/components/form"),
  "@ombiel/aek-lib/react/components/input":require("@ombiel/aek-lib/react/components/input"),
  "@ombiel/aek-lib/react/components/label":require("@ombiel/aek-lib/react/components/label"),
  "@ombiel/aek-lib/react/components/divider":require("@ombiel/aek-lib/react/components/divider"),
  "@ombiel/aek-lib/react/components/date-input":require("@ombiel/aek-lib/react/components/date-input"),
  "@ombiel/aek-lib/react/components/router":require("@ombiel/aek-lib/react/components/router"),
  "@ombiel/aek-lib/react/components/page":require("@ombiel/aek-lib/react/components/page"),
  "@ombiel/aek-lib/react/components/container":require("@ombiel/aek-lib/react/components/container"),
  "@ombiel/aek-lib/react/components/nav-menu":require("@ombiel/aek-lib/react/components/nav-menu"),
  "@ombiel/aek-lib/react/components/table":require("@ombiel/aek-lib/react/components/table"),
  "@ombiel/aek-lib/notifier":require("@ombiel/aek-lib/notifier"),
  "@ombiel/aek-lib/utils":require("@ombiel/aek-lib/utils"),
  "@ombiel/aek-lib/simple-store":require("@ombiel/aek-lib/simple-store"),
  "@ombiel/aek-lib/simple-store/plugins/logger":require("@ombiel/aek-lib/simple-store/plugins/logger"),
  "@ombiel/aek-lib/simple-store/plugins/localstorage":require("@ombiel/aek-lib/simple-store/plugins/localstorage"),
  "@ombiel/aek-lib/simple-store/plugins/windowsize":require("@ombiel/aek-lib/simple-store/plugins/windowsize")

};


window.require = function(module) {
  return bundled[module];
};

(function($) {
  $(function() {

    // or dividers
    // todo: move this into generic docserver script
    $("p:contains('--or--')").replaceWith('<div class="ui horizontal divider">Or</div>');


    // evaluate babel script
    // todo: move this into generic docserver script
    $("script[type='text/aek']").each(function() {
      console.log("pp");
      var $script = $(this);
      var code = $script.html();

      eval(babel.transform(code).code);

    });


    // aek script examples
    // todo: move this into generic docserver script
    $("script[type='text/aek-example']").each(function() {
      var $script = $(this);
      var code = $script.html();
      var target = document.createElement("div");
      var $example = $('<div class="example"/>');
      if(this.hasAttribute("data-contained")) {
        $example.addClass("contained");
      }

      if(!$example.find(".showcode-btn").length) {


        $example.append(`
          <a href="" class="showcode-btn">
            <i class="code icon"></i>
          </a>
        `);

        // trim blank lines
        code = code.replace(/^( *)?\n/,"");
        code = code.replace(/\n( *)?$/,"");

        // normalise indentation
        var preSpace = code.match(/\n( *)/);

        if(preSpace && preSpace[1]) {
          var r = new RegExp("\\n"+preSpace[1],"g");
          code = code.replace(r,"\n").trim();
        }

        var $exampleCode = $('<code/>').text(code);
        var $examplePre = $('<pre class="language-javascript"/>').append($exampleCode);

        $example.append(target);

        $example.insertAfter($script);
        $example.after($examplePre);
        $script.remove();

        var componentName = $script.attr("data-component");

        if(!componentName) {
          code = `
            var Comp = React.createClass({
              render:function() {
                ${code}
              }
            });
          `;
          componentName = "Comp";
        }

        eval(babel.transform(`
          (function() {
            ${code}
            ReactDOM.render(React.createElement(${componentName}),target);
          })();
        `).code);
      }
    });

    if(window.Prism) {
      Prism.highlightAll();
    }



    $("#fastClickDemo").each(function() {

      React.initializeTouchEvents(true);
      var FastClickTest = React.createClass({
        getInitialState:function() {
          return {};
        },
        handleClickOne: function(){
          this.setState({
            cTime:Date.now(),
            button1:!this.state.button1
          });
        },
        handleTouchEndOne: function(){
          this.setState({
            cTime:null,
            teTime:Date.now()
          });
        },
        handleClickTwo: function(){
          this.setState({
            cTime:Date.now(),
            button2:!this.state.button2
          });
        },
        handleTouchEndTwo: function(){
          this.setState({
            teTime:Date.now()
          });
        },
        render: function(){
          var teTime = this.state.teTime;
          var cTime = this.state.cTime;
          var dTime = cTime && teTime && (cTime - teTime);
          var button1Class = (this.state.button1 && "done" || "") + " needsclick test";
          var button2Class = (this.state.button2 && "done") + " test";
          return (
            <div className="fastclicktest">
              <p>Layer One responds to click events normally, Which on iOS will introduce a 300ms delay</p>
              <p>Layer Two has FastClick, and this will fire the click handler with no delay.</p>
              <p>The layers will behave normally on platforms that do not support touch events.</p>
              <p className="stats">Touch end time: <input id="te-time" value={teTime} /> </p>
              <p className="stats">Click event time: <input id="c-time" value={cTime} /> </p>
              <p className="stats">Difference: <input id="d-time" value={dTime} /> </p>
              <div>
                <button className={button1Class} onClick={this.handleClickOne} onTouchEnd={this.handleTouchEndOne} id="test-one">One</button>
                <button className={button2Class} onClick={this.handleClickTwo} onTouchEnd={this.handleTouchEndTwo} id="test-two">Two</button>
              </div>
            </div>
          );
        }
      });

      ReactDOM.render(<FastClickTest/>,this);

    });

  });

})(jQuery);
