var React = require("react");
var mergeProps = require("../utils/merge-props");
var pickHtmlProps = require("../utils/pick-html-props");
var getChildren = require("../utils/children");
var _ = require("../../utils");

var Group = React.createClass({

  getDefaultProps:function() {
    return {component:"div"};
  },

  render:function() {

    var children = getChildren(this);

    var content = children.map(function(child,index) {

      if(!child || _.isString(child) || _.isNumber(child)) { return child; }

      var props = {};
      var classSet = props.classSet = {
        attached:true
      };
      if(index === 0) {
        classSet.top = true;
      }

      if(index === children.length - 1) {
        classSet.bottom = true;
      }

      if(!child.key) {
        props.key = "child" + index;
      }

      props = pickHtmlProps(mergeProps(props,child.props));

      return React.cloneElement(child,props);

    });

    let {props} = this;
    let {component} = props;

    if (_.isString(component)) {
      props = pickHtmlProps(props);
    }

    return React.createElement(component,props,content);
  }

});

module.exports = Group;
