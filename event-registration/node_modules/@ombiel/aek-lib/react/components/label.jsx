var React = require("react");
var mergeProps = require("../utils/merge-props");
var pickHtmlProps = require("../utils/pick-html-props");
var _ = require("../../utils");

var Label = React.createClass({

  getDefaultProps:function() {
    return {
      component:"div"
    };
  },

  render:function() {

    var props = this.props;
    var classSet = { ui:true };


    // states
    ["circular"].forEach(function(prop) {
      if(props[prop]) { classSet[prop] = true; }
    });

    var icon = props.icon && <i key="icon" className={props.icon+" icon"}/>;

    var detail = props.detail && <span key="detail" className="detail">{props.detail}</span>;

    if(props.pointing) {
      classSet[props.pointing] = true;
      classSet.pointing = true;
    }

    ["variation","theme","size"].forEach(function(prop) {
      if(props[prop]) { classSet[props[prop]] = true; }
    });

    classSet.label = true;

    props = mergeProps({classSet},props);

    let {component} = props;

    if (_.isString(component)) {
      props = pickHtmlProps(props);
    }

    return React.createElement(component,props,[icon,props.children,detail]);

  }

});

var CornerLabel = React.createClass({

  render:function() {

    var className = this.props.alignLeft && "left corner" || "corner";

    var props = mergeProps({className},_.omit(this.props,"children"));

    return <Label {...props} />;

  }
});

var AttachedLabel = React.createClass({

  render:function() {

    var classSet = _.pick(this.props,"top","bottom","left","right");
    classSet.attached = true;

    var props = mergeProps({classSet},this.props);

    return <Label {...props} />;

  }
});

var Tag = React.createClass({

  render:function() {

    return <Label className="tag" {...this.props} />;

  }
});

var Ribbon = React.createClass({

  render:function() {

    var classSet = {
      right:this.props.alignRight,
      ribbon:true,
      absolute:this.props.absolute
    };

    var props = mergeProps({classSet},this.props);

    return <Label {...props} />;

  }
});

Label.Ribbon = Ribbon;
Label.Tag = Tag;
Label.AttachedLabel = AttachedLabel;
Label.Corner = CornerLabel;
Label.CornerLabel = CornerLabel;
Label.Label = Label;

module.exports = Label;
