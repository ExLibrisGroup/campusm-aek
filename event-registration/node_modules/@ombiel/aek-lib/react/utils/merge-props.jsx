var _ = require("../../utils");
var cx = require("classnames");

function className2classSet(className) {
  var classSet = {};
  className.trim().split(" ").forEach(function(cl) {
    if(cl) { classSet[cl] = true; }
  });
  return classSet;
}

var mergeProps = module.exports = function(props1,props2,...args) {

  var out;

  if(!props1) { props1 = {}; }
  if(!props2) { props2 = {}; }


  if(props1.classSet) {
    let classNameSet = props1.className && className2classSet(props1.className) || {};
    props1.className = cx(_.extend(classNameSet,props1.classSet));
  }

  var merged = {className:props1.className};

  if(props2.className) {
    merged.className += " " + props2.className;
  }

  if(props2.classSet) {
    let mergedClassName = merged.className || "";
    let classSet = className2classSet(mergedClassName);

    merged.className = cx(_.extend(classSet,props2.classSet));

    delete props2.classSet;

  }

  if(props1.style && props2.style) {
    merged.style = _.extend({},props1.style,props2.style);
  }

  out = _.extend({},props1,props2,merged);

  delete out.classSet;

  if(args.length) {
    return mergeProps(out,...args);
  }

  return out;

};
