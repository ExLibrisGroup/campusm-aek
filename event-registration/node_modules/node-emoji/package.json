{
  "_args": [
    [
      {
        "raw": "node-emoji@^1.4.1",
        "scope": null,
        "escapedName": "node-emoji",
        "name": "node-emoji",
        "rawSpec": "^1.4.1",
        "spec": ">=1.4.1 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\paytonp\\Projects\\NA campusM Tiles\\ibeacon-triggered-survey\\node_modules\\marked-terminal"
    ]
  ],
  "_from": "node-emoji@>=1.4.1 <2.0.0",
  "_id": "node-emoji@1.8.1",
  "_inCache": true,
  "_location": "/node-emoji",
  "_nodeVersion": "6.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/node-emoji-1.8.1.tgz_1500822826174_0.46837284113280475"
  },
  "_npmUser": {
    "name": "omnidan",
    "email": "me@omnidan.net"
  },
  "_npmVersion": "5.0.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-emoji@^1.4.1",
    "scope": null,
    "escapedName": "node-emoji",
    "name": "node-emoji",
    "rawSpec": "^1.4.1",
    "spec": ">=1.4.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/marked-terminal"
  ],
  "_resolved": "https://registry.npmjs.org/node-emoji/-/node-emoji-1.8.1.tgz",
  "_shasum": "6eec6bfb07421e2148c75c6bba72421f8530a826",
  "_shrinkwrap": null,
  "_spec": "node-emoji@^1.4.1",
  "_where": "C:\\Users\\paytonp\\Projects\\NA campusM Tiles\\ibeacon-triggered-survey\\node_modules\\marked-terminal",
  "author": {
    "name": "Daniel Bugl",
    "email": "daniel.bugl@touchlay.com"
  },
  "bugs": {
    "url": "https://github.com/omnidan/node-emoji/issues"
  },
  "dependencies": {
    "lodash.toarray": "^4.4.0"
  },
  "description": "simple emoji support for node.js projects",
  "devDependencies": {
    "istanbul": "^0.4.5",
    "mocha": "^3.0.2",
    "should": "^11.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-+ktMAh1Jwas+TnGodfCfjUbJKoANqPaJFN0z0iqh41eqD8dvguNzcitVSBSVK1pidz0AqGbLKcoVuVLRVZ/aVg==",
    "shasum": "6eec6bfb07421e2148c75c6bba72421f8530a826",
    "tarball": "https://registry.npmjs.org/node-emoji/-/node-emoji-1.8.1.tgz"
  },
  "gitHead": "4a75a41992ad4b471ef0db4c431cd2abdc0361ab",
  "homepage": "https://github.com/omnidan/node-emoji#readme",
  "keywords": [
    "emoji",
    "simple",
    "emoticons",
    "emoticon",
    "emojis",
    "smiley",
    "smileys",
    "smilies",
    "ideogram",
    "ideograms"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "omnidan",
      "email": "daniel.bugl@touchlay.com"
    }
  ],
  "name": "node-emoji",
  "optionalDependencies": {},
  "readme": "# node-emoji\n\n[![NPM version (1.0.3)](https://img.shields.io/npm/v/node-emoji.svg?style=flat-square)](https://www.npmjs.com/package/node-emoji) [![NPM Downloads](https://img.shields.io/npm/dm/node-emoji.svg?style=flat-square)](https://www.npmjs.com/package/node-emoji) [![Build Status](https://img.shields.io/travis/omnidan/node-emoji/master.svg?style=flat-square)](https://travis-ci.org/omnidan/node-emoji) [![Dependencies](https://img.shields.io/david/omnidan/node-emoji.svg?style=flat-square)](https://david-dm.org/omnidan/node-emoji) [![Code Climate](https://img.shields.io/codeclimate/github/omnidan/node-emoji.svg?style=flat-square)](https://codeclimate.com/github/omnidan/node-emoji) [![https://paypal.me/DanielBugl/9](https://img.shields.io/badge/donate-paypal-yellow.svg?style=flat-square)](https://paypal.me/DanielBugl/9)\n\n_simple emoji support for node.js projects_\n\n![node-emoji example](https://i.imgur.com/yIo5Uux.png)\n\n## Installation\nTo install `node-emoji`, you need [node.js](http://nodejs.org/) and [npm](https://github.com/npm/npm#super-easy-install). :rocket:\n\nOnce you have that set-up, just run `npm install --save node-emoji` in your project directory. :ship:\n\nYou're now ready to use emoji in your node projects! Awesome! :metal:\n\n## Usage\n```javascript\nvar emoji = require('node-emoji')\nemoji.get('coffee') // returns the emoji code for coffee (displays emoji on terminals that support it)\nemoji.which(emoji.get('coffee')) // returns the string \"coffee\"\nemoji.get(':fast_forward:') // `.get` also supports github flavored markdown emoji (http://www.emoji-cheat-sheet.com/)\nemoji.emojify('I :heart: :coffee:!') // replaces all :emoji: with the actual emoji, in this case: returns \"I ‚ù§Ô∏è ‚òïÔ∏è!\"\nemoji.random() // returns a random emoji + key, e.g. `{ emoji: '‚ù§Ô∏è', key: 'heart' }`\nemoji.search('cof') // returns an array of objects with matching emoji's. `[{ emoji: '‚òïÔ∏è', key: 'coffee' }, { emoji: ‚ö∞', key: 'coffin'}]`\nemoji.unemojify('I ‚ù§Ô∏è üçï') // replaces the actual emoji with :emoji:, in this case: returns \"I :heart: :pizza:\"\nemoji.find('üçï') // Find the `pizza` emoji, and returns `({ emoji: 'üçï', key: 'pizza' })`;\nemoji.find('pizza') // Find the `pizza` emoji, and returns `({ emoji: 'üçï', key: 'pizza' })`;\nemoji.hasEmoji('üçï') // Validate if this library knows an emoji like `üçï`\nemoji.hasEmoji('pizza') // Validate if this library knowns a emoji with the name `pizza`\nemoji.strip('‚ö†Ô∏è „Ä∞Ô∏è „Ä∞Ô∏è low disk space') // Strips the string from emoji's, in this case returns: \"low disk space\".\nemoji.replace('‚ö†Ô∏è „Ä∞Ô∏è „Ä∞Ô∏è low disk space', (emoji) => `${emoji.key}:`) // Replace emoji's by callback method: \"warning: low disk space\"\n```\n\n## Options\n\n### onMissing\n`emoji.emojify(str, onMissing)`\n\nAs second argument, `emojify` takes an handler to parse unknown emojis. Provide a function to add your own handler:\n\n```js\nvar onMissing = function (name) {\n  return name;\n});\n\nvar emojified = emoji.emojify('I :unknown_emoji: :star: :another_one:', onMissing);\n// emojified: I unknown_emoji ‚≠êÔ∏è another_one\n```\n\n### format\n`emoji.emojify(str, onMissing, format)`\n\nAs third argument, `emojify` takes an handler to wrap parsed emojis. Provide a function to place emojis in custom elements, and to apply your custom styling:\n\n```js\nvar format = function (code, name) {\n  return '<img alt=\"' + code + '\" src=\"' + name + '.png\" />';\n});\n\nvar emojified = emoji.emojify('I :unknown_emoji: :star: :another_one:', null, format);\n// emojified: I <img alt=\"‚ù§Ô∏è\" src=\"heart.png\" /> <img alt=\"‚òïÔ∏è\" src=\"coffee.png\" />\n```\n\n## Adding new emoji\nEmoji come from js-emoji (Thanks a lot :thumbsup:). You can get a JSON file with all emoji here: https://raw.githubusercontent.com/omnidan/node-emoji/master/lib/emoji.json\n\nTo update the list or add custom emoji, clone this repository and put them into `lib/emojifile.js`.\nThen run `npm run-script emojiparse` in the project directory or `node emojiparse` in the lib directory.\nThis should generate the new emoji.json file and output `Done.`.\n\nThat's all, you now have more emoji you can use! :clap:\n\n## Support / Donations\nIf you want to support node-emoji development, please consider donating (it helps me keeping my projects active and alive!):\n\n * Paypal: [![daniel.bugl@gmail.com](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=YBMS9EKTNPZHJ)\n * Bitcoin: [1J5eKsrAcPPLv5gPxSjSUkXnbJpkhndFgA](bitcoin:1J5eKsrAcPPLv5gPxSjSUkXnbJpkhndFgA)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/omnidan/node-emoji.git"
  },
  "scripts": {
    "coverage": "istanbul cover _mocha test",
    "emojiparse": "node lib/emojiparse.js",
    "prepublish": "npm run test",
    "test": "mocha --require should --bail --reporter spec test/*",
    "watch": "mocha --require should --bail --reporter spec test/* --watch"
  },
  "version": "1.8.1"
}
