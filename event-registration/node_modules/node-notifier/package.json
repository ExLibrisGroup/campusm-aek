{
  "_args": [
    [
      {
        "raw": "node-notifier@^4.1.2",
        "scope": null,
        "escapedName": "node-notifier",
        "name": "node-notifier",
        "rawSpec": "^4.1.2",
        "spec": ">=4.1.2 <5.0.0",
        "type": "range"
      },
      "C:\\Users\\paytonp\\Projects\\NA campusM Tiles\\ibeacon-triggered-survey\\node_modules\\@ombiel\\aek-buildtools"
    ]
  ],
  "_from": "node-notifier@>=4.1.2 <5.0.0",
  "_id": "node-notifier@4.6.1",
  "_inCache": true,
  "_location": "/node-notifier",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/node-notifier-4.6.1.tgz_1471811837812_0.47649690927937627"
  },
  "_npmUser": {
    "name": "mikaelb",
    "email": "mikaelbre@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-notifier@^4.1.2",
    "scope": null,
    "escapedName": "node-notifier",
    "name": "node-notifier",
    "rawSpec": "^4.1.2",
    "spec": ">=4.1.2 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@ombiel/aek-buildtools",
    "/gulp-notify"
  ],
  "_resolved": "https://registry.npmjs.org/node-notifier/-/node-notifier-4.6.1.tgz",
  "_shasum": "056d14244f3dcc1ceadfe68af9cff0c5473a33f3",
  "_shrinkwrap": null,
  "_spec": "node-notifier@^4.1.2",
  "_where": "C:\\Users\\paytonp\\Projects\\NA campusM Tiles\\ibeacon-triggered-survey\\node_modules\\@ombiel\\aek-buildtools",
  "author": {
    "name": "Mikael Brevik"
  },
  "bin": {
    "notify": "./bin.js"
  },
  "bugs": {
    "url": "https://github.com/mikaelbr/node-notifier/issues"
  },
  "dependencies": {
    "cli-usage": "^0.1.1",
    "growly": "^1.2.0",
    "lodash.clonedeep": "^3.0.0",
    "minimist": "^1.1.1",
    "semver": "^5.1.0",
    "shellwords": "^0.1.0",
    "which": "^1.0.5"
  },
  "description": "A Node.js module for sending notifications on native Mac, Windows (post and pre 8) and Linux (or Growl as fallback)",
  "devDependencies": {
    "mocha": "^3.0.0",
    "should": "^4.0.4"
  },
  "directories": {
    "example": "example"
  },
  "dist": {
    "shasum": "056d14244f3dcc1ceadfe68af9cff0c5473a33f3",
    "tarball": "https://registry.npmjs.org/node-notifier/-/node-notifier-4.6.1.tgz"
  },
  "gitHead": "0dc7ea4dd5bcb9584e9dfda3b69e6f3bf2379968",
  "homepage": "https://github.com/mikaelbr/node-notifier#readme",
  "keywords": [
    "notification center",
    "mac os x 10.8",
    "notify",
    "terminal-notifier",
    "notify-send",
    "growl",
    "windows 8 notification",
    "toaster",
    "notification"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mikaelb",
      "email": "mikaelbre@gmail.com"
    }
  ],
  "name": "node-notifier",
  "optionalDependencies": {},
  "readme": "# node-notifier [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][depstat-image]][depstat-url]\n\nA Node.js module for sending cross platform system notifications. Using\nNotification Center for Mac, notify-osd/libnotify-bin for Linux, Toasters for\nWindows 8/10, or taskbar Balloons for earlier Windows versions. If none of\nthese requirements are met, Growl is used.\n\n![Mac Screenshot](https://raw.githubusercontent.com/mikaelbr/node-notifier/master/example/mac.png)\n![Native Windows Screenshot](https://raw.githubusercontent.com/mikaelbr/node-notifier/master/example/windows.png)\n![Growl Screenshot](https://raw.githubusercontent.com/mikaelbr/node-notifier/master/example/growl.png)\n\n## Quick Usage\n\nShow a native notification on Mac, Windows, Linux:\n\n```javascript\nconst notifier = require('node-notifier');\n// String\nnotifier.notify('Message');\n\n// Object\nnotifier.notify({\n  'title': 'My notification',\n  'message': 'Hello, there!'\n});\n```\n\n## Requirements\n- **Mac OS X**: >= 10.8 or Growl if earlier.\n- **Linux**: `notify-osd` or `libnotify-bin` installed (Ubuntu should have this by default)\n- **Windows**: >= 8, task bar balloon if earlier or Growl if that is installed.\n- **General Fallback**: Growl\n\nGrowl takes precedence over Windows balloons.\n\nSee [documentation and flow chart for reporter choice](./DECISION_FLOW.md)\n\n## Install\n```\n$ npm install --save node-notifier\n```\n\n## Cross-Platform Advanced Usage\n\nStandard usage, with cross-platform fallbacks as defined in the\n[reporter flow chart](./DECISION_FLOW.md). All of the options\nbelow will work in a way or another on all platforms.\n\n```javascript\nconst notifier = require('node-notifier');\nconst path = require('path');\n\nnotifier.notify({\n  title: 'My awesome title',\n  message: 'Hello from node, Mr. User!',\n  icon: path.join(__dirname, 'coulson.jpg'), // Absolute path (doesn't work on balloons)\n  sound: true, // Only Notification Center or Windows Toasters\n  wait: true // Wait with callback, until user action is taken against notification\n}, function (err, response) {\n  // Response is response from notification\n});\n\nnotifier.on('click', function (notifierObject, options) {\n  // Triggers if `wait: true` and user clicks notification\n});\n\nnotifier.on('timeout', function (notifierObject, options) {\n  // Triggers if `wait: true` and notification closes\n});\n```\n\nYou can also specify what reporter you want to use if you\nwant to customize it or have more specific options per system.\nSee documentation for each reporter below.\n\nExample:\n```javascript\nconst NotificationCenter = require('node-notifier/notifiers/notificationcenter');\nnew NotificationCenter(options).notify();\n\nconst NotifySend = require('node-notifier/notifiers/notifysend');\nnew NotifySend(options).notify();\n\nconst WindowsToaster = require('node-notifier/notifiers/toaster');\nnew WindowsToaster(options).notify();\n\nconst Growl = require('node-notifier/notifiers/growl');\nnew Growl(options).notify();\n\nconst WindowsBalloon = require('node-notifier/notifiers/balloon');\nnew WindowsBalloon(options).notify();\n\n```\n\nOr if you are using several (or you are lazy):\n(note: technically, this takes longer to require)\n\n```javascript\nconst nn = require('node-notifier');\n\nnew nn.NotificationCenter(options).notify();\nnew nn.NotifySend(options).notify();\nnew nn.WindowsToaster(options).notify(options);\nnew nn.WindowsBalloon(options).notify(options);\nnew nn.Growl(options).notify(options);\n```\n\n## Contents\n\n* [Notification Center documentation](#usage-notificationcenter)\n* [Windows Toaster documentation](#usage-windowstoaster)\n* [Windows Balloon documentation](#usage-windowsballoon)\n* [Growl documentation](#usage-growl)\n* [Notify-send documentation](#usage-notifysend)\n\n\n### Usage NotificationCenter\n\nSame usage and parameter setup as [terminal-notifier](https://github.com/alloy/terminal-notifier).\n\nNative Notification Center requires Mac OS X version 10.8 or higher. If you have\nan earlier version, Growl will be the fallback. If Growl isn't installed, an \nerror will be returned in the callback.\n\n\n#### Example\n\nWrapping around [terminal-notifier](https://github.com/alloy/terminal-notifier), you can\ndo all terminal-notifier can do through properties to the `notify` method. E.g.\nif `terminal-notifier` says `-message`, you can do `{message: 'Foo'}`, or\nif `terminal-notifier` says `-list ALL`, you can do `{list: 'ALL'}`. Notification\nis the primary focus for this module, so listing and activating do work,\nbut isn't documented.\n\n### All notification options with their defaults:\n\n```javascript\nconst NotificationCenter = require('node-notifier').NotificationCenter;\n\nvar notifier = new NotificationCenter({\n  withFallback: false, // Use Growl Fallback if <= 10.8\n  customPath: void 0 // Relative path if you want to use your fork of terminal-notifier\n});\n\nnotifier.notify({\n  'title': void 0,\n  'subtitle': void 0,\n  'message': void 0,\n  'sound': false, // Case Sensitive string for location of sound file, or use one of OS X's native sounds (see below)\n  'icon': 'Terminal Icon', // Absolute Path to Triggering Icon\n  'contentImage': void 0, // Absolute Path to Attached Image (Content Image)\n  'open': void 0, // URL to open on Click\n  'wait': false // Wait for User Action against Notification\n}, function(error, response) {\n  console.log(response);\n});\n```\n\n**For Mac OS notifications, icon and contentImage requires OS X 10.9.**\n\nSound can be one of these: `Basso`, `Blow`, `Bottle`, `Frog`, `Funk`, `Glass`,\n`Hero`, `Morse`, `Ping`, `Pop`, `Purr`, `Sosumi`, `Submarine`, `Tink`. \nIf sound is simply `true`, `Bottle` is used.\n\nSee [specific Notification Center example](./example/advanced.js).\n\n### Usage WindowsToaster\n\n**Note:** There are some limitations for images in native Windows 8 notifications:\nThe image must be a PNG image, and cannot be over 1024x1024 px, or over over 200Kb.\nYou also need to specify the image by using an absolute path. These limitations are\ndue to the Toast notification system. A good tip is to use something like\n`path.join` or `path.delimiter` to have cross-platform pathing.\n\n**Windows 10 Note:** You might have to activate banner notification for the toast to show.\n\nFrom [mikaelbr/gulp-notify#90 (comment)](https://github.com/mikaelbr/gulp-notify/issues/90#issuecomment-129333034)\n> You can make it work by going to System > Notifications & Actions. The 'toast' app needs to have Banners enabled. (You can activate banners by clicking on the 'toast' app and setting the 'Show notification banners' to On)\n\n[toaster](https://github.com/nels-o/toaster) is used to get native Windows Toasts!\n\n```javascript\nconst WindowsToaster = require('node-notifier').WindowsToaster;\n\nvar notifier = new WindowsToaster({\n  withFallback: false, // Fallback to Growl or Balloons?\n  customPath: void 0 // Relative path if you want to use your fork of toast.exe\n});\n\nnotifier.notify({\n  title: void 0,\n  message: void 0,\n  icon: void 0, // Absolute path to Icon\n  sound: false, // true | false.\n  wait: false, // Wait for User Action against Notification\n}, function(error, response) {\n  console.log(response);\n});\n```\n\n### Usage Growl\n\n```javascript\nconst Growl = require('node-notifier').Growl;\n\nvar notifier = new Growl({\n  name: 'Growl Name Used', // Defaults as 'Node'\n  host: 'localhost',\n  port: 23053\n});\n\nnotifier.notify({\n  title: 'Foo',\n  message: 'Hello World',\n  icon: fs.readFileSync(__dirname + \"/coulson.jpg\"),\n  wait: false, // Wait for User Action against Notification\n\n  // and other growl options like sticky etc.\n  sticky: false,\n  label: void 0,\n  priority: void 0\n});\n```\n\nSee more information about using\n[growly](https://github.com/theabraham/growly/).\n\n### Usage WindowsBalloon\n\nFor earlier Windows versions, the taskbar balloons are used (unless\nfallback is activated and Growl is running). For balloons, a great\nproject called [notifu](http://www.paralint.com/projects/notifu/) is used.\n\n```javascript\nconst WindowsBalloon = require('node-notifier').WindowsBalloon;\n\nvar notifier = new WindowsBalloon({\n  withFallback: false, // Try Windows Toast and Growl first?\n  customPath: void 0 // Relative path if you want to use your fork of notifu\n});\n\nnotifier.notify({\n  title: void 0,\n  message: void 0,\n  sound: false, // true | false.\n  time: 5000, // How long to show balloon in ms\n  wait: false, // Wait for User Action against Notification\n  type: 'info' // The notification type : info | warn | error\n}, function(error, response) {\n  console.log(response);\n});\n```\n\nSee full usage on the [project homepage:\nnotifu](http://www.paralint.com/projects/notifu/).\n\n### Usage NotifySend\n\nNote: notify-send doesn't support the wait flag.\n\n```javascript\nconst NotifySend = require('node-notifier').NotifySend;\n\nvar notifier = new NotifySend();\n\nnotifier.notify({\n  title: 'Foo',\n  message: 'Hello World',\n  icon: __dirname + \"/coulson.jpg\",\n\n  // .. and other notify-send flags:\n  urgency: void 0,\n  time: void 0,\n  category: void 0,\n  hint: void 0,\n});\n```\n\nSee flags and options [on the man pages](http://manpages.ubuntu.com/manpages/gutsy/man1/notify-send.1.html)\n\n## CLI\n\nYou can also use node-notifier as a CLI (as of `v4.2.0`).\n\n```shell\n$ notify -h\n\n# notify\n## Options\n   * --help (alias -h)\n   * --title (alias -t)\n   * --subtitle (alias -st)\n   * --message (alias -m)\n   * --icon (alias -i)\n   * --sound (alias -s)\n   * --open (alias -o)\n\n## Example\n\n   $ notify -t \"Hello\" -m \"My Message\" -s --open http://github.com\n   $ notify -t \"Agent Coulson\" --icon https://raw.githubusercontent.com/mikaelbr/node-notifier/master/example/coulson.jpg -m \"Well, that's new. \"\n   $ notify -m \"My Message\" -s Glass\n   $ echo \"My Message\" | notify -t \"Hello\"\n```\n\nYou can also pass message in as `stdin`:\n\n```js\n➜ echo \"Message\" | notify\n\n# Works with existing arguments\n➜ echo \"Message\" | notify -t \"My Title\"\n➜ echo \"Some message\" | notify -t \"My Title\" -s\n```\n\n## Thanks to OSS\n\n`node-notifier` is made possible through Open Source Software. A very special thanks to all the modules `node-notifier` uses.\n* [terminal-notifier](https://github.com/alloy/terminal-notifier)\n* [toaster](https://github.com/nels-o/toaster)\n* [notifu](http://www.paralint.com/projects/notifu/)\n* [growly](https://github.com/theabraham/growly/)\n\n[![NPM downloads][npm-downloads]][npm-url]\n\n## Common Issues\n\n### Use inside tmux session\n\nWhen using node-notifier within a tmux session, it can cause a hang in the system. This can be solved by following the steps described in this comment: https://github.com/julienXX/terminal-notifier/issues/115#issuecomment-104214742\n\nSee more info here: https://github.com/mikaelbr/node-notifier/issues/61#issuecomment-163560801\n\n\n### Within Electron Packaging\n\nIf packaging your Electron app as an `asar`, you will find node-notifier will fail to load. Due to the way asar works, you cannot execute a binary from within an asar. As a simple solution, when packaging the app into an asar please make sure you `--unpack` the vendor folder of node-notifier, so the module still has access to the notification binaries. To do this, you can do so by using the following command:\n\n```bash\nasar pack . app.asar --unpack \"./node_modules/node-notifier/vendor/**\"\n```\n\n\n### Using Webpack\n\nWhen using node-notifier inside of webpack, you must add the following snippet to your `webpack.config.js`. The reason this is required, is because node-notifier loads the notifiers from a binary, and so a relative file path is needed. When webpack compiles the modules, it supresses file directories, causing node-notifier to error on certain platforms. To fix/workaround this, you must tell webpack to keep the relative file directories, by doing so, append the following code to your `webpack.config.js`\n\n```javascript\nnode: {\n  __filename: true,\n  __dirname: true\n}\n```\n\n\n## License\n\n[MIT License](http://en.wikipedia.org/wiki/MIT_License)\n\n[npm-url]: https://npmjs.org/package/node-notifier\n[npm-image]: http://img.shields.io/npm/v/node-notifier.svg?style=flat\n[npm-downloads]: http://img.shields.io/npm/dm/node-notifier.svg?style=flat\n\n[travis-url]: http://travis-ci.org/mikaelbr/node-notifier\n[travis-image]: http://img.shields.io/travis/mikaelbr/node-notifier.svg?style=flat\n\n[depstat-url]: https://gemnasium.com/mikaelbr/node-notifier\n[depstat-image]: http://img.shields.io/gemnasium/mikaelbr/node-notifier.svg?style=flat\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/mikaelbr/node-notifier.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "4.6.1"
}
