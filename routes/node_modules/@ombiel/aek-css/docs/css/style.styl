themes = {} // important that you declare themes variable here for global scope
@import "../../index";


// define baseSizes
fontSize = 14px

// define main colours - for most users this may be sufficient
primeColor = #dc4115
altColor = orange
textColor = rgba(0, 0, 0, 0.8)
linkColor = primeColor
lineHeight = 1.5em

// define themes
// aek-css-theme(themeName,color,light,background,textColor,hover,down,active,lightDown,lightHover,dividedBorderColor,ribbonShadow,headerColor)

// set themes for primary and secondary
aek-css-theme('prime',primeColor)
aek-css-theme('alt',altColor)
  
// additional themes that might be useful
aek-css-theme('brandcolour',rgb(111, 6, 196))
aek-css-theme('red',rgb(217, 92, 92))


// define default vars object to send to all modules
defaults = {
  headerFont:inherit,
  pageFont:inherit,
  emSize:fontSize,
  fontSize:fontSize,
  textColor:textColor,
  
  headerFontWeight:bold,
  headerLineHeight:1.33em,
  h1:2rem,
  h2:1.714rem,
  h3:1.28rem,
  h4:1.071rem,
  h5:1rem,

  lineHeight:lineHeight,
  paragraphMargin: s('1em 0em 1em'),
  paragraphLineHeight:lineHeight,

  linkColor:linkColor,
  linkUnderline:none,
  linkHoverColor:lighten(linkColor, 5)
}



// install modules that you want
// you can define additional variables to override vars for specific modules by adding a hash as a third argument
// e.g. aek-css-module(moduleName,vars,{fontSize:16px,textColor:#999})
aek-css-module('reset',defaults)
aek-css-module('site',{},defaults)
aek-css-module('button',defaults)
aek-css-module('divider',defaults)
aek-css-module('form',defaults)
aek-css-module('grid',defaults)
aek-css-module('header',defaults)
aek-css-module('icon',defaults)
aek-css-module('input',defaults)
aek-css-module('label',defaults)
aek-css-module('menu',defaults)
aek-css-module('message',defaults)
aek-css-module('segment',defaults)
aek-css-module('table',defaults)
aek-css-module('checkbox',defaults)


@import "../../node_modules/@ombiel/aek-docserver/docs/css/docs.styl";




/* add custom css here */


.brandme{
  color: #dc4115
}

.sb-container{
  .ui.button{
    margin-bottom: 10px;
  }
}




/*--------------
      Icon
---------------*/

.iconset.example .grid {
  text-align: left;
}

.iconset.example .grid .code {
  position: static;
}

.iconset.example .grid > .row > .column {
  height: 6em;
  opacity: 0.8;
  text-align: center;
  color: #888888;

  -webkit-transition:
    color 0.3s ease,
    opacity 0.3s ease;
  -moz-transition:
    color 0.3s ease,
    opacity 0.3s ease;
  -o-transition:
    color 0.3s ease,
    opacity 0.3s ease;
  -ms-transition:
    color 0.3s ease,
    opacity 0.3s ease;
  transition:
    color 0.3s ease,
    opacity 0.3s ease;
}
.iconset.example .column .icon {
  opacity: 1;
  height: 1em;
  color: #333333;
  display: block;
  margin: 0em auto 0.25em;
  font-size: 2em;

  -webkit-transition:
    color 0.6s ease,
    transform 0.2s ease;
  -moz-transition:
    color 0.6s ease,
    transform 0.2s ease;
  -o-transition:
    color 0.6s ease,
    transform 0.2s ease;
  -ms-transition:
    color 0.6s ease,
    transform 0.2s ease;
  transition:
    color 0.6s ease,
    transform 0.2s ease;
}

.example.circular .circular{
  width: 175px;
  height: 175px;
}

.clearfix:after { 
   content: " ";
   display: block; 
   height: 0; 
   clear: both;
}

.ui.primary.segment:not(.inverted), .ui.secondary.segment:not(.inverted){
  border-top: 0px !important;
}

.fluid.image{
  position: relative;
  
  img{
    display: block;
    width: 100%;
    height: auto;
  }

}

.wireframe.image{
  display: block;
  height: auto;
  max-width: 100%;
  margin: 1rem 0;
  width: auto;
}

.divided.list{
  
  .item{
    display: block;
    padding: 0.5em;
    border-top: 1px solid rgba(39,41,43,.15);
  }
 
}

.example.header{
  .wireframe.image{
    max-width: 500px;
    &.centered{
      margin: 1rem auto;
    }
  }
}

.grid{
  img{
    width: 100%;
    height: 100%;
  }
}

.example.grid .grid{
  
  position: relative;
  
  &:before{
    position: absolute;
    top: 0.5rem;
    left: 0.5rem;
    background-color: #F0F0F0;
    content: '';
    width: calc(100% - 1rem);
    height: calc(100% - 1rem);
    box-shadow: 0px 0px 0px 1px #DDDDDD inset;
  }
  
  .column:not(.row):not(.grid):after{
    background-color: #FFFFFF;
    box-shadow: 0px 0px 0px 1px #DDDDDD inset;
    content: "";
    display: block;
    min-height: 50px;
  }

}

