"use strict";
var gulp = require('gulp'),
    replace = require('gulp-replace'),
    chalk = require("chalk"),
    nodemon = require("gulp-nodemon");

/* --------------- CONFIG ---------------------- */

// explicilty cherrypick required elements from Semantic UI
var semanticElements = [
  "button",
  "divider",
  "header",
  "icon",
  "input",
  "label",
  "rail",
  "segment",
  "step"
];

// explicilty cherrypick required collection from Semantic UI
var semanticCollections = [
  "breadcrumb",
  "form",
  "grid",
  "menu",
  "message",
  "table"
];

var semanticGlobals = [
  "reset",
  "site"
];

var semanticModules = [
  'checkbox'
];

/* ----------------- UTILS -------------------- */

var utils = require("./lib/utils");
var clean = utils.clean;

// function to concatenate all semantic elements and collections into a single array of paths
function semanticPaths(prefix,suffix) {
  return semanticElements.map(function(el) {
    return prefix+"elements/"+el+suffix;
  }).concat(semanticCollections.map(function(el) {
    return prefix+"collections/"+el+suffix;
  })).concat(semanticGlobals.map(function(el) {
    return prefix+"globals/"+el+suffix;
  })).concat(semanticModules.map(function(el) {
    return prefix+"modules/"+el+suffix;
  }));
}

/* --------------- PLUGINS -------------- */

var cleanSemanticDefs = require("./lib/gulp-plugins/clean-semantic-defs");
var lessToStylus = require("./lib/gulp-plugins/less2stylus");
var applyStylusThemes = require("./lib/gulp-plugins/apply-stylus-themes");
var cleanStylusContent = require("./lib/gulp-plugins/clean-stylus-content");


/* -------------- TASKS ---------------------*/

// semantic definitions
gulp.task("semantic-definitions", function(cb) {

  var definitionsDest = "styl/semantic/definitions";

  clean(definitionsDest+"/**/*.*").then(function() {

    gulp.src(semanticPaths("node_modules/semantic-ui-less/definitions/",".less"))
      .pipe(replace("@import (multiple) '../../theme.config';",''))
      .pipe(cleanSemanticDefs())
      .pipe(lessToStylus())
      .pipe(applyStylusThemes())
      .pipe(cleanStylusContent())
      .pipe(gulp.dest(definitionsDest))
      .on("end",cb);
  });
});


// semantic variables
gulp.task("semantic-variables", function(cb) {

  var variablesDest = "styl/semantic/variables";

  clean(variablesDest+"**/*.*").then(function() {

    gulp.src(semanticPaths("node_modules/semantic-ui-less/themes/default/",".variables"))
      .pipe(lessToStylus())
      .pipe(cleanStylusContent())
      .pipe(gulp.dest(variablesDest))
      .on("end",cb)
      .resume();

  });
});


// semantic overrides
gulp.task("semantic-overrides", function(cb) {

  var overridesDest = "styl/semantic/overrides";

  clean(overridesDest+"**/*.*").then(function() {

    gulp.src(semanticPaths("node_modules/semantic-ui-less/themes/default/",".overrides"))
      .pipe(lessToStylus())
      .pipe(cleanStylusContent())
      .pipe(gulp.dest(overridesDest))
      .on("end",cb)
      .resume();

  });
});

// runserver
gulp.task("runserver",function() {

  nodemon({script:"./server.js"});

});


// DEFAULT TASK
gulp.task("default",["semantic-definitions","semantic-variables","semantic-overrides"],function() {
  console.log(chalk.green("theme variables:"));
  console.log(applyStylusThemes.themeVariables);
});


