const _ = require("lodash");
const pkgOmbiel = require("@ombiel/aek-cli-support/fstore")("./package.json","ombiel");
const auth = require("@ombiel/aek-cli-support/auth");
const aekDevServer = require("../index");


module.exports = {
  name: "start",
  help: "Start development server.",

  options: [
    {
      name: "port",
      default: process.env.PORT || "5000",
      noPrompt: true,
      abbr: "p",
    },
    {
      name: "username",
      message: "Please enter your App Manager username",
      noPrompt: true,
    },
    {
      name: "password",
      message: "Please enter your App Manager password",
      inputType: "password",
      noPrompt: true,
    },
    {
      name: "hostname",
      message: "Which hostname would you like to target",
      promptIfMissing: true,
      abbr: "d",
      beforeInquiry: (opts,data)=>{
        const devHostname = pkgOmbiel.get("dev.hostname") || pkgOmbiel.get("runserver.hostname");
        if (devHostname) {
          return Promise.resolve(_.extend({},opts,{value: devHostname}));
        }
        return auth.getOptionHostnames(opts,data);
      }
    },
    {
      name: "targetProtocol",
      default: pkgOmbiel.get("runserver.targetProtocol") || "https",
      noPrompt: true,
    },
    {
      name: "targetPort",
      default: pkgOmbiel.get("runserver.targetPort"),
      noPrompt: true,
    },
    {
      name: "appManagerBase",
      noPrompt: true,
      default: pkgOmbiel.get("appManager.baseURL"),
    },
    {
      name: "bypassSSLVerification",
      noPrompt: true,
      default: pkgOmbiel.get("appManager.bypassSSLVerification") || false,
    },
    {
      name: "logs",
      noPrompt: true,
      default: false,
    },
    {
      name: "useProxy",
      noPrompt: true,
      default: process.env.HTTP_PROXY || false,
    },

  ],

  callback: (options)=>{
    aekDevServer(options);
  }
};
