const Path = require("path");
const chokidar = require("chokidar");
const _ = require("lodash");

const {transpile} = require("../modules/screen-builder");

const defaults = {
  srcBase: "./src/server",
};

module.exports = function(options) {

  options = _.extend({},defaults,options);

  let debouncePromise;
  let transpilePromise;

  function debounceTranspile() {
    if (!debouncePromise) {
      debouncePromise = new Promise((resolve)=>{
        setTimeout(resolve,100);
      });
      const currentDebounce = debouncePromise;
      transpilePromise = debouncePromise.then(()=>{
        if (debouncePromise === currentDebounce) {
          debouncePromise = null;
          return transpile(options);
        }
        return transpilePromise;
      });
    }
  }

  return function(req,res,next) {
    if (!transpilePromise) {
      debounceTranspile();
      chokidar.watch(Path.resolve(options.srcBase)).on("all",debounceTranspile);
    }
    transpilePromise.then((screens)=>{
      req.screens = screens;
      next();
    });
  };

};
