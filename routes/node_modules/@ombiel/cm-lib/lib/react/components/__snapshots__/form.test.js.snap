// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form with data prop should match snapshot 1`] = `
<form
  className="ui form"
  onSubmit={[Function]}
>
  <FormBody
    bodyComponent={[Function]}
    data={
      Object {
        "name": "Fred",
      }
    }
    fields={
      Array [
        Object {
          "hideLabel": false,
          "key": "name",
          "label": "Name",
          "name": "name",
          "onChange": [Function],
          "validation": undefined,
          "value": "Fred",
        },
      ]
    }
    form={
      Form {
        "context": Object {},
        "focus": [Function],
        "onChange": [Function],
        "onSubmit": [Function],
        "props": Object {
          "bodyComponent": [Function],
          "data": Object {
            "name": "Fred",
          },
          "fields": Array [
            Object {
              "name": "name",
            },
          ],
        },
        "refs": Object {},
        "setState": [Function],
        "state": null,
        "updater": Updater {
          "_callbacks": Array [],
          "_renderer": ReactShallowRenderer {
            "_context": Object {},
            "_element": <Form
              bodyComponent={[Function]}
              data={
                Object {
                  "name": "Fred",
                }
              }
              fields={
                Array [
                  Object {
                    "name": "name",
                  },
                ]
              }
            />,
            "_forcedUpdate": false,
            "_instance": [Circular],
            "_newState": null,
            "_rendered": <form
              className="ui form"
              onSubmit={[Function]}
            >
              <FormBody
                bodyComponent={[Function]}
                data={
                  Object {
                    "name": "Fred",
                  }
                }
                fields={
                  Array [
                    Object {
                      "hideLabel": false,
                      "key": "name",
                      "label": "Name",
                      "name": "name",
                      "onChange": [Function],
                      "validation": undefined,
                      "value": "Fred",
                    },
                  ]
                }
                form={[Circular]}
              />
            </form>,
            "_rendering": false,
            "_updater": [Circular],
          },
        },
        Symbol(enzyme.__setState__): [Function],
      }
    }
    key="formBody"
  />
</form>
`;

exports[`Form with many fields including an array of fields should match snapshot 1`] = `
<form
  className="ui form"
  onSubmit={[Function]}
>
  <FormBody
    bodyComponent={[Function]}
    data={
      Object {
        "name1": "namedata1",
        "name2": "namedata2",
        "name3": "namedata3",
        "name6": "namedata6",
      }
    }
    fields={
      Array [
        Object {
          "hideLabel": false,
          "key": "name1",
          "label": "Name 1",
          "name": "name1",
          "onChange": [Function],
          "validation": undefined,
          "value": "namedata1",
        },
        Object {
          "hideLabel": false,
          "key": "name2",
          "label": "Name label 2",
          "name": "name2",
          "onChange": [Function],
          "validation": undefined,
          "value": "Name value 2",
        },
        Object {
          "hideLabel": true,
          "key": "name3",
          "label": "Name label 3",
          "name": "name3",
          "onChange": [Function],
          "validation": undefined,
          "value": "namedata3",
        },
        Array [
          <Field
            name="name4"
            type="number"
          />,
          <Field
            name="name5"
            type="number"
          />,
        ],
        Object {
          "hideLabel": false,
          "key": "name6",
          "label": "Name 6",
          "name": "name6",
          "onChange": [Function],
          "validation": undefined,
          "value": "namedata6",
        },
      ]
    }
    form={
      Form {
        "context": Object {},
        "focus": [Function],
        "onChange": [Function],
        "onSubmit": [Function],
        "props": Object {
          "bodyComponent": [Function],
          "data": Object {
            "name1": "namedata1",
            "name2": "namedata2",
            "name3": "namedata3",
            "name6": "namedata6",
          },
          "fields": Array [
            Object {
              "name": "name1",
            },
            Object {
              "label": "Name label 2",
              "name": "name2",
              "value": "Name value 2",
            },
            Object {
              "hideLabel": true,
              "label": "Name label 3",
              "name": "name3",
            },
            Array [
              <Field
                name="name4"
                type="number"
              />,
              <Field
                name="name5"
                type="number"
              />,
            ],
            Object {
              "name": "name6",
            },
          ],
        },
        "refs": Object {},
        "setState": [Function],
        "state": null,
        "updater": Updater {
          "_callbacks": Array [],
          "_renderer": ReactShallowRenderer {
            "_context": Object {},
            "_element": <Form
              bodyComponent={[Function]}
              data={
                Object {
                  "name1": "namedata1",
                  "name2": "namedata2",
                  "name3": "namedata3",
                  "name6": "namedata6",
                }
              }
              fields={
                Array [
                  Object {
                    "name": "name1",
                  },
                  Object {
                    "label": "Name label 2",
                    "name": "name2",
                    "value": "Name value 2",
                  },
                  Object {
                    "hideLabel": true,
                    "label": "Name label 3",
                    "name": "name3",
                  },
                  Array [
                    <Field
                      name="name4"
                      type="number"
                    />,
                    <Field
                      name="name5"
                      type="number"
                    />,
                  ],
                  Object {
                    "name": "name6",
                  },
                ]
              }
            />,
            "_forcedUpdate": false,
            "_instance": [Circular],
            "_newState": null,
            "_rendered": <form
              className="ui form"
              onSubmit={[Function]}
            >
              <FormBody
                bodyComponent={[Function]}
                data={
                  Object {
                    "name1": "namedata1",
                    "name2": "namedata2",
                    "name3": "namedata3",
                    "name6": "namedata6",
                  }
                }
                fields={
                  Array [
                    Object {
                      "hideLabel": false,
                      "key": "name1",
                      "label": "Name 1",
                      "name": "name1",
                      "onChange": [Function],
                      "validation": undefined,
                      "value": "namedata1",
                    },
                    Object {
                      "hideLabel": false,
                      "key": "name2",
                      "label": "Name label 2",
                      "name": "name2",
                      "onChange": [Function],
                      "validation": undefined,
                      "value": "Name value 2",
                    },
                    Object {
                      "hideLabel": true,
                      "key": "name3",
                      "label": "Name label 3",
                      "name": "name3",
                      "onChange": [Function],
                      "validation": undefined,
                      "value": "namedata3",
                    },
                    Array [
                      <Field
                        name="name4"
                        type="number"
                      />,
                      <Field
                        name="name5"
                        type="number"
                      />,
                    ],
                    Object {
                      "hideLabel": false,
                      "key": "name6",
                      "label": "Name 6",
                      "name": "name6",
                      "onChange": [Function],
                      "validation": undefined,
                      "value": "namedata6",
                    },
                  ]
                }
                form={[Circular]}
              />
            </form>,
            "_rendering": false,
            "_updater": [Circular],
          },
        },
        Symbol(enzyme.__setState__): [Function],
      }
    }
    key="formBody"
  />
</form>
`;

exports[`Form with minimal props should match snapshot 1`] = `
<form
  className="ui form"
  onSubmit={[Function]}
>
  <FormBody
    bodyComponent={[Function]}
    fields={
      Array [
        Object {
          "hideLabel": false,
          "key": "fieldName",
          "label": "Field Name",
          "name": "fieldName",
          "onChange": [Function],
          "validation": undefined,
          "value": "",
        },
      ]
    }
    form={
      Form {
        "context": Object {},
        "focus": [Function],
        "onChange": [Function],
        "onSubmit": [Function],
        "props": Object {
          "bodyComponent": [Function],
          "fields": Array [
            Object {
              "name": "fieldName",
            },
          ],
        },
        "refs": Object {},
        "setState": [Function],
        "state": null,
        "updater": Updater {
          "_callbacks": Array [],
          "_renderer": ReactShallowRenderer {
            "_context": Object {},
            "_element": <Form
              bodyComponent={[Function]}
              fields={
                Array [
                  Object {
                    "name": "fieldName",
                  },
                ]
              }
            />,
            "_forcedUpdate": false,
            "_instance": [Circular],
            "_newState": null,
            "_rendered": <form
              className="ui form"
              onSubmit={[Function]}
            >
              <FormBody
                bodyComponent={[Function]}
                fields={
                  Array [
                    Object {
                      "hideLabel": false,
                      "key": "fieldName",
                      "label": "Field Name",
                      "name": "fieldName",
                      "onChange": [Function],
                      "validation": undefined,
                      "value": "",
                    },
                  ]
                }
                form={[Circular]}
              />
            </form>,
            "_rendering": false,
            "_updater": [Circular],
          },
        },
        Symbol(enzyme.__setState__): [Function],
      }
    }
    key="formBody"
  />
</form>
`;
