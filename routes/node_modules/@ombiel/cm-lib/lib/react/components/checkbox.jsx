import "./base.aekcss";
import "./checkbox.aekcss";
import "./icon.aekcss";

import React from "react";
import PropTypes from "prop-types";
import {extend,uniqueId} from "lodash";

import mergeProps from "../utils/merge-props";
import pickHtmlProps from "../utils/pick-html-props";

export class Checkbox extends React.Component {

  onChange = (e)=>{
    const onChange = this.props.onChange || this.inputProps.onChange;
    if (onChange) {

      const input = e.target;
      const name = (e.target && e.target.name) || null;
      let value = (input || null) && input.checked;

      if (value === true) {
        value = this.props.checkedValue;
      }
      else if (value === false) {
        value = this.props.uncheckedValue;
      }

      onChange(e,name,value);

    }

  }


  render() {

    const props = this.props;
    let id = props.id;
    let containerProps = {classSet: {ui: true,checkbox: true}};

    if (!id) {
      if (!this.id) {
        this.id = uniqueId("checkbox_");
      }
      id = this.id;
    }

    var inputProps = extend({id: id,name: props.name,type: "checkbox"},props,{onChange: this.onChange,value: null,type: "checkbox"});

    var className = "ui checkbox";

    if (props.checkboxType) {
      containerProps.classSet[props.checkboxType] = true;
    }

    containerProps = mergeProps(containerProps,props.containerProps);

    inputProps.checked = props.checked || props.value === props.checkedValue;

    if (inputProps.value === null) { inputProps.value = undefined; }

    return (
      <div className={className} {...pickHtmlProps(containerProps)}>
        <input {...pickHtmlProps(inputProps,{exclude: ["children"]})} />
        <label htmlFor={id}>{props.label}</label>
      </div>
    );
  }
}

Checkbox.propTypes = {
  onChange: PropTypes.func,
  checkedValue: PropTypes.any,
  uncheckedValue: PropTypes.any,
};

Checkbox.defaultProps = {
  checkedValue: true,
  uncheckedValue: false
};


export function Slider(props) {
  return <Checkbox checkboxType="slider" {...props} />;
}

export function Toggle(props) {
  return <Checkbox checkboxType="toggle" {...props} />;
}
