import "./base.aekcss";
import "./divider.aekcss";
import "./icon.aekcss";

import {isString} from "lodash";
import React from "react";
import PropTypes from "../utils/prop-types-extra";

import mergeProps from "../utils/merge-props";
import getChildren from "../utils/children";
import pickHtmlProps from "../utils/pick-html-props";


export function Divider(props) {

  const classSet = { ui: true };
  const children = getChildren(props);


  // states
  ["inverted","clearing","hidden","vertical"].forEach(function(prop) {
    if (props[prop]) { classSet[prop] = true; }
  });

  if (props.icon) {
    children.unshift(<i aria-hidden="true" key="icon" className={`${props.icon} icon`} />);
  }

  ["variation"].forEach(function(prop) {
    if (props[prop]) { classSet[props[prop]] = true; }
  });

  classSet.horizontal = children.length && !props.vertical;

  classSet.divider = true;

  let newProps = mergeProps({classSet},props,{hidden: null});

  const {component} = props;

  if (isString(component)) {
    newProps = pickHtmlProps(newProps);
  }

  return React.createElement(component,newProps,children);

}

Divider.propTypes = {
  icon: PropTypes.string,
  vertical: PropTypes.bool,
  component: PropTypes.component,
};

Divider.defaultProps = {
  component: "div",
  clearing: true,
};

export function SectionDivider(props) {
  return <Divider variation="section" {...props} />;
}

export function HeaderDivider(props) {
  return <Divider component="h4" variation="header" {...props} />;
}

export function FittedDivider(props) {
  return <Divider variation="fitted" {...props} />;
}

export function HiddenDivider(props) {
  return <Divider hidden {...props} />;
}


export function VerticalDivider(props) {
  return <Divider vertical {...props} />;
}

export function InvertedDivider(props) {
  return <Divider inverted {...props} />;
}
