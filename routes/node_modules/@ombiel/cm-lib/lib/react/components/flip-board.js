import React from "react";
import PropTypes from "prop-types";

import styles from "./flip-board.module.less";
import mergeProps from "../utils/merge-props";
import {vendorPrefix} from "../../vendor-style";

const isIE11 = !!window.MSInputMethodContext && !!document.documentMode;

export default class FlipBoard extends React.Component {

  constructor() {
    super();
    this.state = {};
  }

  componentDidUpdate(prevProps) {
    const {flipped} = this.props;
    if (flipped !== prevProps.flipped && isIE11) {
      this.startIETransition();
    }
  }

  componentWillUnmount() {
    clearTimeout(this.stageTimer);
  }

  startIETransition() {

    const {transitionTime} = this.props;

    clearTimeout(this.stageTimer);
    this.setState({stage: 1});
    this.stageTimer = setTimeout(()=>{
      this.setState({stage: 2});
    },transitionTime / 2);
  }

  render() {

    const { flipped, front, back, transitionTime,...otherProps } = this.props;

    const { stage } = this.state;

    const sideClass = flipped ? styles.flipped : styles.notFlipped;

    const containerProps = mergeProps({
      className: `${styles.flipContainer} ${sideClass}`,
    },otherProps);

    if (stage) {
      containerProps.className += ` ${styles[`stage${stage}`]}`;
    }

    const boardStyle = vendorPrefix({
      transitionDuration: `${transitionTime}ms`,
    });

    return (
      <div {...containerProps}>
        <div className={styles.board} style={boardStyle}>
          <div className={`${styles.face} ${styles.front}`}>{front()}</div>
          <div className={`${styles.face} ${styles.back}`}>{back()}</div>
        </div>
      </div>
    );
  }
}

FlipBoard.propTypes = {
  flipped: PropTypes.bool,
  front: PropTypes.func,
  back: PropTypes.func,
  transitionTime: PropTypes.number,
};

FlipBoard.defaultProps = {
  transitionTime: 600,
  front: ()=>null,
  back: ()=>null,
};
