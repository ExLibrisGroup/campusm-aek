import React from "react";
import PropTypes from "prop-types";
import {isFunction} from "lodash";

import FlipBoard from "./flip-board";

export default class Flipper extends React.Component {

  constructor() {
    super();
    this.state = {flipped: false};
    // this.originalContent = props.children;
    // this.front = props.children;
    this.timers = [];
  }

  componentWillUnmount() {
    this.timers.forEach((timer)=>{
      clearTimeout(timer);
    });
  }

  setContent(content) {
    if (this.state.flipped) {
      this.back = content;
    }
    else {
      this.front = content;
    }
    this.forceUpdate();
  }

  flipContent(content) {
    if (this.state.flipped) {
      this.front = content;
    }
    else {
      this.back = content;
    }
    return this.flip();
  }

  flipOriginal() {
    return this.flipContent();
  }

  isBoardFlipped() {
    return this.state.flipped;
  }

  flip() {
    this.setState(({flipped})=>{
      return {
        flipped: !flipped,
        hasFlipped: true,
      };
    });
    const {transitionTime} = this.props;
    return new Promise((resolve)=>{
      this.timers.push(setTimeout(resolve,transitionTime));
    });
  }

  render() {

    const {children,...otherProps} = this.props;
    const {flipped,hasFlipped} = this.state;
    let {front,back} = this;


    if (front === undefined) {
      front = children;
    }

    if (back === undefined && hasFlipped) {
      back = children;
    }

    const frontFn = isFunction(front) ? front : ()=>front;
    const backFn = isFunction(back) ? back : ()=>back;

    return <FlipBoard {...{front: frontFn,back: backFn,flipped,...otherProps}} />;
  }
}

Flipper.propTypes = {
  children: PropTypes.node,
  transitionTime: PropTypes.number,
};

Flipper.defaultProps = {
  transitionTime: FlipBoard.defaultProps.transitionTime,
};
