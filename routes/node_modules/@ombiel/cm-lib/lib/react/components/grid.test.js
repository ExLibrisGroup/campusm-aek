import React from 'react';
import {mount} from "enzyme";
import {Grid,Row,Col} from "./grid";

describe("Grid no props",()=>{
  const wrapper = mount(
    <Grid></Grid>
  );

  it("should match snapshot",()=>{
    expect(wrapper).toMatchSnapshot();
  });

  it("should have a class of ui and grid",()=>{
    const gridComponent = wrapper.find('div');
    expect(gridComponent).toHaveLength(1);
    expect(gridComponent.hasClass('ui')).toEqual(true);
    expect(gridComponent.hasClass('grid')).toEqual(true);
  });
});

describe("Grid with rows and cols",()=>{
  const wrapper = mount(
    <Grid>
      <Row>
        <Col>1</Col>
        <Col>2</Col>
        <Col>3</Col>
        <Col>4</Col>
        <Col>5</Col>
        <Col>6</Col>
      </Row>
      <Row>
        <Col>1</Col>
        <Col>2</Col>
        <Col>3</Col>
        <Col>4</Col>
        <Col>5</Col>
      </Row>
      <Row>
        <Col>1</Col>
        <Col>2</Col>
        <Col>3</Col>
        <Col>4</Col>
      </Row>
      <Row>
        <Col>1</Col>
        <Col>2</Col>
        <Col>3</Col>
      </Row>
      <Row>
        <Col>1</Col>
        <Col>2</Col>
      </Row>
      <Row>
        <Col>1</Col>
      </Row>
    </Grid>
  );

  it("should match snapshot",()=>{
    expect(wrapper).toMatchSnapshot();
  });

  it("should have a class of ui and grid",()=>{
    const gridComponent = wrapper.find('div.grid');
    expect(gridComponent).toHaveLength(1);
    expect(gridComponent.hasClass('ui')).toEqual(true);
    expect(gridComponent.hasClass('grid')).toEqual(true);
  });

  it("should have a row with the classes of six, column and row",()=>{
    const gridComponent = wrapper.find('div.grid');
    const rowComponent = gridComponent.children().find('div.row').at(0);
    expect(rowComponent).toHaveLength(1);
    expect(rowComponent.hasClass('six')).toEqual(true);
    expect(rowComponent.hasClass('column')).toEqual(true);
    expect(rowComponent.hasClass('row')).toEqual(true);
  });

  it("should have a row with the classes of five, column and row",()=>{
    const gridComponent = wrapper.find('div.grid');
    const rowComponent = gridComponent.children().find('div.row').at(1);
    expect(rowComponent).toHaveLength(1);
    expect(rowComponent.hasClass('five')).toEqual(true);
    expect(rowComponent.hasClass('column')).toEqual(true);
    expect(rowComponent.hasClass('row')).toEqual(true);
  });

  it("should have a row with the classes of four, column and row",()=>{
    const gridComponent = wrapper.find('div.grid');
    const rowComponent = gridComponent.children().find('div.row').at(2);
    expect(rowComponent).toHaveLength(1);
    expect(rowComponent.hasClass('four')).toEqual(true);
    expect(rowComponent.hasClass('column')).toEqual(true);
    expect(rowComponent.hasClass('row')).toEqual(true);
  });

  it("should have a row with the classes of three, column and row",()=>{
    const gridComponent = wrapper.find('div.grid');
    const rowComponent = gridComponent.children().find('div.row').at(3);
    expect(rowComponent).toHaveLength(1);
    expect(rowComponent.hasClass('three')).toEqual(true);
    expect(rowComponent.hasClass('column')).toEqual(true);
    expect(rowComponent.hasClass('row')).toEqual(true);
  });

  it("should have a row with the classes of two, column and row",()=>{
    const gridComponent = wrapper.find('div.grid');
    const rowComponent = gridComponent.children().find('div.row').at(4);
    expect(rowComponent).toHaveLength(1);
    expect(rowComponent.hasClass('two')).toEqual(true);
    expect(rowComponent.hasClass('column')).toEqual(true);
    expect(rowComponent.hasClass('row')).toEqual(true);
  });

  it("should have a row with the classes of one, column and row",()=>{
    const gridComponent = wrapper.find('div.grid');
    const rowComponent = gridComponent.children().find('div.row').at(5);
    expect(rowComponent).toHaveLength(1);
    expect(rowComponent.hasClass('one')).toEqual(true);
    expect(rowComponent.hasClass('column')).toEqual(true);
    expect(rowComponent.hasClass('row')).toEqual(true);
  });


});
