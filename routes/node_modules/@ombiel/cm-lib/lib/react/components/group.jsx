import "./base.aekcss";

import {isString,isNumber} from "lodash";

import React from "react";
import PropTypes from "../utils/prop-types-extra";
import mergeProps from "../utils/merge-props";
import pickHtmlProps from "../utils/pick-html-props";
import getChildren from "../utils/children";

export default function Group(props) {

  const children = getChildren(props);

  const content = children.map(function(child,index) {

    if (!child || isString(child) || isNumber(child)) { return child; }

    let childProps = {};
    const classSet = childProps.classSet = {
      attached: true
    };
    if (index === 0) {
      classSet.top = true;
    }

    if (index === children.length - 1) {
      classSet.bottom = true;
    }

    if (!child.key) {
      childProps.key = `child${index}`;
    }

    childProps = pickHtmlProps(mergeProps(childProps,child.props));

    return React.cloneElement(child,childProps);

  });

  const {component} = props;
  let newProps = props;
  if (isString(component)) {
    newProps = pickHtmlProps(newProps);
  }

  return React.createElement(component,newProps,content);
}

Group.propTypes = {component: PropTypes.component};

Group.defaultProps = {component: "div"};
