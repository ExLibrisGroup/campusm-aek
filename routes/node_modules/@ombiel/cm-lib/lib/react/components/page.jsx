import "./base.aekcss";

import {debounce} from "lodash";

import React from "react";
import ReactDOM from "react-dom";
import PropTypes from "prop-types";

import mergeProps from "../utils/merge-props";
import Panel from "./panel";

const scrollPositions = {};


export default class Page extends React.Component {


  constructor(props) {
    super(props);
    this.state = {};
    this.onScroll = this.onScroll.bind(this);
  }

  componentWillMount() {
    this.updateScrollPosition = debounce(this.updateScrollPosition,200);
  }

  componentDidMount() {
    if (!this._hasScrolled) {
      var domNode = ReactDOM.findDOMNode(this);
      var {scrollLeft,scrollTop} = scrollPositions[domNode.getAttribute("data-reactid")] || {};
      if (scrollLeft) {
        domNode.scrollLeft = scrollLeft;
      }
      if (scrollTop) {
        domNode.scrollTop = scrollTop;
      }

    }
  }

  onScroll(e) {
    this._hasScrolled = true;
    this.updateScrollPosition();

    if (this.props.onScroll) {
      this.props.onScroll(e);
    }
  }

  updateScrollPosition() {
    const domNode = ReactDOM.findDOMNode(this);
    const id = domNode.getAttribute("data-reactid");
    const {scrollTop,scrollLeft} = domNode;
    scrollPositions[id] = {scrollTop,scrollLeft};
  }

  render() {

    var newProps = mergeProps({className: "page"},this.props);

    return <Panel onScroll={this.onScroll} {...newProps} />;

  }

}

Page.propTypes = {
  onScroll: PropTypes.func,
};

Page.defaultProps = {component: "article"};
