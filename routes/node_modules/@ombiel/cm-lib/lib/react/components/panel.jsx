import {forEach,isNumber,isString} from "lodash";

import React from "react";
import PropTypes from "prop-types";
import mergeProps from "../utils/merge-props";
import pickHtmlProps from "../utils/pick-html-props";


// use of panels requires this additional attribute on the body
// with this attribute, the panels will implement native scrolling (webkitOverflowScrolling="touch")
// this attribute is modified in horizontal slide animation to temporarily switch off webkitOverflowScroll
// as it causes flickering
document.addEventListener("DOMContentLoaded", function() {
  document.body.setAttribute("data-aek-is-animating","false");
});

export default function Panel(props) {

  const {loading,padded} = props;

  const newProps = {
    classSet: {
      panel: true,
      loading
    },
    style: {}
  };

  let children = props.children;

  if (padded) {
    newProps.classSet.padding = true;
    children = <div style={{height: "100%",position: "relative"}}>{children}</div>;
  }

  forEach(["top","left","width","height"],(key)=>{
    if (isNumber(props[key])) {
      newProps.style[key] = `${props[key]}px`;
    }
  });

  props = pickHtmlProps(mergeProps(newProps,props,{children}));

  return React.createElement((isString(props.component) && props.component) || "div",props);
}

Panel.propTypes = {
  loading: PropTypes.bool,
  padded: PropTypes.bool,
  children: PropTypes.any,
  component: PropTypes.oneOfType([PropTypes.string,PropTypes.func]),
};

Panel.defaultProps = {
  component: "div"
};
