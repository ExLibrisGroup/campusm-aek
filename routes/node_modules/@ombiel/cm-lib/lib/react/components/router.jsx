import React from "react";
import PropTypes from "prop-types";
import {find,isNumber} from "lodash";

import {Router,Route} from "../../router";

import Pager from "./pager";
import Page from "./page";
import Panel from "./panel";
import mergeProps from "../utils/merge-props";
import getChildren from "../utils/children";

import {Padding} from "./segment";
import {Message} from "./message";

function defaultDefaultHandler() {
  return (
    <Page>
      <Padding>
        <Message>
          404 - sorry page not found
        </Message>
      </Padding>
    </Page>
  );
}

export class CMReactRouter extends Router {

  constructor(opts) {

    if (!opts) { opts = {}; }

    super(opts);

    this.transitionName = opts.transtionName || "slide-horizontal";

  }

}



export class RouterView extends React.Component {

  componentWillMount() {

    const {RouterClass} = this.props;
    let {router} = this.props;

    if (!router) {
      router = new RouterClass();
    }

    this.router = router;

    this.route = router.addRoute("*",(ctx,next)=>{
      this.forceUpdate();
      next();
    });

    router.start();
  }

  componentWillUnmount() {
    this.router.removeRoute(this.route);
  }

  render() {

    const router = this.router;

    const ctx = router.currentCtx;

    const {defaultHandler,componentProps,component} = this.props;

    let handler = find(getChildren(this),(child)=>{
      const route = new Route(child.props.path);
      return route.match(ctx.path,ctx.params);
    });

    if (handler) {
      handler = React.cloneElement(handler,{ctx,router,key: ctx.path});
    }
    else {
      handler = React.createElement(defaultHandler,{ctx,router,key: ctx.path});
    }

    let compProps = {};

    /* eslint-disable react/destructuring-assignment */
    ["top","left","width","height"].forEach((k)=>{
      if (isNumber(this.props[k])) {
        compProps[k] = this.props[k];
      }
    });
    /* eslint-enable react/destructuring-assignment */

    compProps = mergeProps(compProps,componentProps);

    return (
      <Pager component={component} transitionDirection={ctx.transitionDirection} {...compProps}>
        {handler}
      </Pager>
    );
  }
}

RouterView.propTypes = {
  router: PropTypes.object, //eslint-disable-line react/require-default-props
  RouterClass: PropTypes.func,
  defaultHandler: PropTypes.func,
  componentProps: PropTypes.object,
  component: PropTypes.oneOfType([PropTypes.string,PropTypes.func]),
};

RouterView.defaultProps = {
  component: Panel,
  RouterClass: CMReactRouter,
  componentProps: {},
  defaultHandler: defaultDefaultHandler,
};

export {CMReactRouter as AekReactRouter};
