import {find,includes,isString,forEach} from "lodash";

const prefixes = {};
let style;
const vendorPrefixes = ["","webkit","moz","ms","o"];

export function getVendorKey(key) {
  if (!style) { style = window.document.body.style; }
  if (prefixes[key] === undefined) {
    const capKey = key.substring(0,1).toUpperCase() + key.substr(1);
    let vendorKey;

    find(vendorPrefixes,function(pfx) {
      var vKey = pfx ? pfx + capKey : key;
      if (style[vKey] !== undefined) {
        if (includes(["webkit","moz","o"],pfx)) {
          vendorKey = pfx.substring(0,1).toUpperCase() + pfx.substr(1) + capKey;
        }
        else {
          vendorKey = vKey;
        }
        return true;
      }
      return false;
    });

    prefixes[key] = vendorKey;
  }
  return prefixes[key];
}



function prefix(styles) {

  if (isString(styles)) {
    return getVendorKey(styles) || styles;
  }

  var out = {};
  forEach(styles,function(value,key) {
    const vendorKey = getVendorKey(key) || key;
    out[vendorKey] = value;
  });

  return out;
}

function hasProperty(key) {
  return !!getVendorKey(key);
}

export {prefix as vendorPrefix, hasProperty as hasVendorProperty};
